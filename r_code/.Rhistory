library(tidyverse)
library(maps)
setwd(getSrcDirectory()[1])
getSrcDirectory()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dirname(parent.frame(2)$ofile)
this.dir <- dirname(parent.frame(2)$ofile) # frame(3) also works.
setwd(this.dir)
getSrcDirectory(function(x) {x})
setwd("C:/Users/tarnd/Google Drive/School Stuff/DATA 550/DATA550-Miniposter/R code + graphs")
source("script.R", chdir = TRUE)
source("miniposter.R", chdir = TRUE)
>>getSrcDirectory()
??getSrcDirectory()
getSrcDirectory('miniposter.R')
getSrcDirectory('miniposter.R')[1]
getSrcDirectory(miniposter.R)[1]
this.dir = dirname(parent.frame(2)$ofile)
library(rstudioapi)
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
airlinenames <- read_csv("airlinenames.csv")
source('airports.R')
data <- read_csv("air.csv")
data <- read_csv("C:/Users/tarnd/Desktop/air.csv")
remov_airport <- c('HNL', 'OGG', 'LIH', 'KOA', 'ANC', 'STT', 'STX', 'SJU')
typeof(remov_airport)
airports <- airports %>%
select(iata_code, latitude_deg, longitude_deg)
remov_airport <- c('HNL', 'OGG', 'LIH', 'KOA', 'ANC', 'STT', 'STX', 'SJU')
flightdata <- data %>%
select(Dest, Origin, Carrier = UniqueCarrier) %>%
left_join(airports, by = c('Dest' = 'iata_code')) %>%
rename(lat.dest = latitude_deg, long.dest = longitude_deg) %>%
left_join(airports, by = c('Origin' = 'iata_code')) %>%
rename(lat.org = latitude_deg, long.org = longitude_deg) %>%
unique() %>%
filter(!Dest %in% remov_airport & !Origin %in% remov_airport)
UA_data <- flightdata %>%
filter(Carrier == 'UA')
airport_plot <- UA_data %>%
select(Dest, lat.dest, long.dest) %>%
unique()
ggplot() + usamap +
geom_curve(data=UA_data, aes(x = long.org, y = lat.org, xend = long.dest, yend = lat.dest), alpha = 0.2, size = 0.3, color = "red3") +
geom_point(data=UA_data, aes(x = long.dest, y = lat.dest), alpha = 0.8, size = 0.1, colour = "red3") +
#geom_text_repel(data=airport_plot, aes(x = long.dest, y = lat.dest, label = airport_plot$Dest), col = "white", size = 2, segment.color = NA) +
theme(panel.background = element_rect(fill="skyblue1"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = -130, y = 26, hjust = 0, size = 14,
label = paste("United Airlines"), color = "white", family = "Helvetica Black")
usamap <- borders("usa", colour="grey100", fill="grey100") s
usamap <- borders("usa", colour="grey100", fill="grey100")
ggplot() + usamap +
geom_curve(data=UA_data, aes(x = long.org, y = lat.org, xend = long.dest, yend = lat.dest), alpha = 0.2, size = 0.3, color = "red3") +
geom_point(data=UA_data, aes(x = long.dest, y = lat.dest), alpha = 0.8, size = 0.1, colour = "red3") +
#geom_text_repel(data=airport_plot, aes(x = long.dest, y = lat.dest, label = airport_plot$Dest), col = "white", size = 2, segment.color = NA) +
theme(panel.background = element_rect(fill="skyblue1"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = -130, y = 26, hjust = 0, size = 14,
label = paste("United Airlines"), color = "white", family = "Helvetica Black")
ggplot() + usamap +
geom_curve(data=UA_data, aes(x = long.org, y = lat.org, xend = long.dest, yend = lat.dest), alpha = 0.2, size = 0.3, color = "red3") +
geom_point(data=UA_data, aes(x = long.dest, y = lat.dest), alpha = 0.8, size = 0.1, colour = "red3") +
#geom_text_repel(data=airport_plot, aes(x = long.dest, y = lat.dest, label = airport_plot$Dest), col = "white", size = 2, segment.color = NA) +
theme(panel.background = element_rect(fill="skyblue1"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = -130, y = 26, hjust = 0, size = 14,
label = paste("United Airlines"), color = "white", family = "Helvetica Black")
WN_data <- flightdata %>%
filter(Carrier == 'WN')
airport_plot <- WN_data %>%
select(Dest, lat.dest, long.dest) %>%
unique()
ggplot() + usamap +
geom_curve(data=WN_data, aes(x = long.org, y = lat.org, xend = long.dest, yend = lat.dest), alpha = 0.2, size = 0.3, color = "red3") +
geom_point(data=WN_data, aes(x = long.dest, y = lat.dest), alpha = 0.8, size = 0.1, colour = "red3") +
#geom_text_repel(data=airport_plot, aes(x = long.dest, y = lat.dest, label = airport_plot$Dest), col = "white", size = 2, segment.color = NA) +
theme(panel.background = element_rect(fill="skyblue1"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = -130, y = 26, hjust = 0, size = 14,
label = paste("Southwest Airlines"), color = "white", family = "Helvetica Black")
??ggplot()
flights_TG <- data %>%
select(UniqueCarrier, ArrDelay, Month, DayofMonth) %>%
left_join(airlinenames, by = c('UniqueCarrier' = 'iata_code')) %>%
filter(Month == 11) %>%
filter(DayofMonth >= 24 & DayofMonth <= 30) %>%
mutate(delay = ifelse(ArrDelay > 5, 1, 0)) %>%
group_by(name) %>%
summarise(flightdelay_percent = mean(delay, na.rm = T)*100)
ggplot(flights_TG, aes(x = reorder(name, +flightdelay_percent ), y = flightdelay_percent,
fill = ifelse(name=='Southwest', T, F))) +
scale_fill_manual(values = c('grey60', 'blue2')) +
geom_col() +
geom_text(aes(label=name),position = position_stack(0.45), angle = 90, col='white') +
labs(title = 'Percentage of Late Arrivals by Airline',
subtitle = 'Thanksgiving 2008') +
theme(panel.background = element_rect(fill="white"),
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
